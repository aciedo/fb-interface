// automatically generated by the FlatBuffers compiler, do not modify

package Auth.WebAuthn

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class AuthenticatorSelectionCriteria : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : AuthenticatorSelectionCriteria {
        __init(_i, _bb)
        return this
    }
    /**
     * The authenticator attachment mode.
     */
    val authenticatorAttachment : Byte
        get() {
            val o = __offset(4)
            return if(o != 0) bb.get(o + bb_pos) else 0
        }
    fun mutateAuthenticatorAttachment(authenticatorAttachment: Byte) : Boolean {
        val o = __offset(4)
        return if (o != 0) {
            bb.put(o + bb_pos, authenticatorAttachment)
            true
        } else {
            false
        }
    }
    /**
     * Whether or not the authenticator must be resident.
     */
    val requireResidentKey : Boolean
        get() {
            val o = __offset(6)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    fun mutateRequireResidentKey(requireResidentKey: Boolean) : Boolean {
        val o = __offset(6)
        return if (o != 0) {
            bb.put(o + bb_pos, (if(requireResidentKey) 1 else 0).toByte())
            true
        } else {
            false
        }
    }
    /**
     * The list of authenticator transports that are allowed.
     */
    val userVerification : Byte
        get() {
            val o = __offset(8)
            return if(o != 0) bb.get(o + bb_pos) else 0
        }
    fun mutateUserVerification(userVerification: Byte) : Boolean {
        val o = __offset(8)
        return if (o != 0) {
            bb.put(o + bb_pos, userVerification)
            true
        } else {
            false
        }
    }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_1_4()
        fun getRootAsAuthenticatorSelectionCriteria(_bb: ByteBuffer): AuthenticatorSelectionCriteria = getRootAsAuthenticatorSelectionCriteria(_bb, AuthenticatorSelectionCriteria())
        fun getRootAsAuthenticatorSelectionCriteria(_bb: ByteBuffer, obj: AuthenticatorSelectionCriteria): AuthenticatorSelectionCriteria {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createAuthenticatorSelectionCriteria(builder: FlatBufferBuilder, authenticatorAttachment: Byte, requireResidentKey: Boolean, userVerification: Byte) : Int {
            builder.startTable(3)
            addUserVerification(builder, userVerification)
            addRequireResidentKey(builder, requireResidentKey)
            addAuthenticatorAttachment(builder, authenticatorAttachment)
            return endAuthenticatorSelectionCriteria(builder)
        }
        fun startAuthenticatorSelectionCriteria(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addAuthenticatorAttachment(builder: FlatBufferBuilder, authenticatorAttachment: Byte) = builder.addByte(0, authenticatorAttachment, 0)
        fun addRequireResidentKey(builder: FlatBufferBuilder, requireResidentKey: Boolean) = builder.addBoolean(1, requireResidentKey, false)
        fun addUserVerification(builder: FlatBufferBuilder, userVerification: Byte) = builder.addByte(2, userVerification, 0)
        fun endAuthenticatorSelectionCriteria(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
