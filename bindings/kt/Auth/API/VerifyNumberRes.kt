// automatically generated by the FlatBuffers compiler, do not modify

package Auth.API

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class VerifyNumberRes : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : VerifyNumberRes {
        __init(_i, _bb)
        return this
    }
    /**
     * Options for registering a WebAuthn credential.
     */
    val options : Auth.WebAuthn.CredentialCreationOptions? get() = options(Auth.WebAuthn.CredentialCreationOptions())
    fun options(obj: Auth.WebAuthn.CredentialCreationOptions) : Auth.WebAuthn.CredentialCreationOptions? {
        val o = __offset(4)
        return if (o != 0) {
            obj.__assign(__indirect(o + bb_pos), bb)
        } else {
            null
        }
    }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_1_4()
        fun getRootAsVerifyNumberRes(_bb: ByteBuffer): VerifyNumberRes = getRootAsVerifyNumberRes(_bb, VerifyNumberRes())
        fun getRootAsVerifyNumberRes(_bb: ByteBuffer, obj: VerifyNumberRes): VerifyNumberRes {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createVerifyNumberRes(builder: FlatBufferBuilder, optionsOffset: Int) : Int {
            builder.startTable(1)
            addOptions(builder, optionsOffset)
            return endVerifyNumberRes(builder)
        }
        fun startVerifyNumberRes(builder: FlatBufferBuilder) = builder.startTable(1)
        fun addOptions(builder: FlatBufferBuilder, options: Int) = builder.addOffset(0, options, 0)
        fun endVerifyNumberRes(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
