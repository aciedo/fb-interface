// automatically generated by the FlatBuffers compiler, do not modify

package Auth.API

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class VerifyWebAuthnReq : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : VerifyWebAuthnReq {
        __init(_i, _bb)
        return this
    }
    val name : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val nameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun nameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val id : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val idAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun idInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    val webauthn : Auth.WebAuthn.RegisterPublicKeyCredential? get() = webauthn(Auth.WebAuthn.RegisterPublicKeyCredential())
    fun webauthn(obj: Auth.WebAuthn.RegisterPublicKeyCredential) : Auth.WebAuthn.RegisterPublicKeyCredential? {
        val o = __offset(8)
        return if (o != 0) {
            obj.__assign(__indirect(o + bb_pos), bb)
        } else {
            null
        }
    }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_1_4()
        fun getRootAsVerifyWebAuthnReq(_bb: ByteBuffer): VerifyWebAuthnReq = getRootAsVerifyWebAuthnReq(_bb, VerifyWebAuthnReq())
        fun getRootAsVerifyWebAuthnReq(_bb: ByteBuffer, obj: VerifyWebAuthnReq): VerifyWebAuthnReq {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createVerifyWebAuthnReq(builder: FlatBufferBuilder, nameOffset: Int, idOffset: Int, webauthnOffset: Int) : Int {
            builder.startTable(3)
            addWebauthn(builder, webauthnOffset)
            addId(builder, idOffset)
            addName(builder, nameOffset)
            return endVerifyWebAuthnReq(builder)
        }
        fun startVerifyWebAuthnReq(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addName(builder: FlatBufferBuilder, name: Int) = builder.addOffset(0, name, 0)
        fun addId(builder: FlatBufferBuilder, id: Int) = builder.addOffset(1, id, 0)
        fun addWebauthn(builder: FlatBufferBuilder, webauthn: Int) = builder.addOffset(2, webauthn, 0)
        fun endVerifyWebAuthnReq(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
