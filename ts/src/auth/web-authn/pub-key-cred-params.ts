// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class PubKeyCredParams implements flatbuffers.IUnpackableObject<PubKeyCredParamsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PubKeyCredParams {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPubKeyCredParams(bb:flatbuffers.ByteBuffer, obj?:PubKeyCredParams):PubKeyCredParams {
  return (obj || new PubKeyCredParams()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPubKeyCredParams(bb:flatbuffers.ByteBuffer, obj?:PubKeyCredParams):PubKeyCredParams {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PubKeyCredParams()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

type():string|null
type(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
type(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

alg():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startPubKeyCredParams(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addType(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, typeOffset, 0);
}

static addAlg(builder:flatbuffers.Builder, alg:number) {
  builder.addFieldInt32(1, alg, 0);
}

static endPubKeyCredParams(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPubKeyCredParams(builder:flatbuffers.Builder, typeOffset:flatbuffers.Offset, alg:number):flatbuffers.Offset {
  PubKeyCredParams.startPubKeyCredParams(builder);
  PubKeyCredParams.addType(builder, typeOffset);
  PubKeyCredParams.addAlg(builder, alg);
  return PubKeyCredParams.endPubKeyCredParams(builder);
}

unpack(): PubKeyCredParamsT {
  return new PubKeyCredParamsT(
    this.type(),
    this.alg()
  );
}


unpackTo(_o: PubKeyCredParamsT): void {
  _o.type = this.type();
  _o.alg = this.alg();
}
}

export class PubKeyCredParamsT implements flatbuffers.IGeneratedObject {
constructor(
  public type: string|Uint8Array|null = null,
  public alg: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const type = (this.type !== null ? builder.createString(this.type!) : 0);

  return PubKeyCredParams.createPubKeyCredParams(builder,
    type,
    this.alg
  );
}
}
